<!-- CSS taken from https://codepen.io/junxu/pen/pKEuz -->

<Styled @bind-Classname="@menuWrapper">
    label: menu-wrapper;
    border: 1px solid #ccc;
    width:50px;
    height: 50px;
    cursor: pointer;
    border-radius: 25px;
    background-color: rgba(255, 255, 255, .7);
    box-shadow: 0 0 0 25px rgba(0, 0, 0, .5) inset;
    transition: all .3s ease-out;
</Styled>

<Styled Classname="@menuWrapper" MediaQuery="MediaQueries.LargerThanTablet">
    display: none;
</Styled>

<Styled @bind-Classname="@menuWrapperOn">
    label: menu-wrapper-on;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0) inset;
</Styled>

<Styled Classname="@menuWrapperOn" MediaQuery="MediaQueries.LargerThanTablet">
    display: none;
</Styled>

<Styled @bind-Classname="@menuButton">
    label: menu-button;
    @menuButtonShared
</Styled>

<Styled Classname="@menuButton" MediaQuery="MediaQueries.LargerThanTablet">
    display: none;
</Styled>

<Styled Classname="@menuButton" PseudoClass="PseudoClasses.Before">
    @menuButtonShared
    content: " ";
    position: absolute;
    margin-top: -10px;
    margin-left: 0;
    -webkit-transform: rotateZ(0deg);
    -webkit-transform-origin: 3px 3px;
</Styled>

<Styled Classname="@menuButton" PseudoClass="PseudoClasses.After">
    @menuButtonShared
    content: " ";
    position: absolute;
    margin-top: 10px;
    margin-left: 0;
    -webkit-transform: rotateZ(0deg);
    -webkit-transform-origin: 3px 3px;
</Styled>

<Styled @bind-Classname="@menuButtonOn">
    label: menu-button-on;
    background-color: transparent;
    margin-left: 12px;
</Styled>

<Styled Classname="@menuButtonOn" MediaQuery="MediaQueries.LargerThanTablet">
    display: none;
</Styled>

<Styled Classname="@menuButtonOn" PseudoClass="PseudoClasses.Before">
    -webkit-transform: rotateZ(45deg);
    background-color: #ff0000;
</Styled>

<Styled Classname="@menuButtonOn" PseudoClass="PseudoClasses.After">
    -webkit-transform: rotateZ(-45deg);
    background-color: #ff0000;
</Styled>

<Styled @bind-Classname="@menuWrapperFinal" Compose1="@menuWrapper" Compose2="@menuWrapperOn" Compose2If="@_open" />

<Styled @bind-Classname="@menuButtonFinal" Compose1="@menuButton" Compose2="@menuButtonOn" Compose2If="@_open" />

<div class="@menuWrapperFinal" @onclick="@InternalOnClick">
    <p class="@menuButtonFinal"></p>
</div>

@code {
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }

    private bool _open = false;

    private string menuWrapperFinal, menuWrapper, menuWrapperOn, menuButtonFinal, menuButton, menuButtonOn;

    private string menuButtonShared = @"
        height: 4px;
        width: 34px;
        background-color: #fff;
        margin: 23px 8px;
        border-radius: 3px;
        -webkit-transition: all 0.5s ease;
    ";

    private void InternalOnClick(MouseEventArgs e)
    {
        _open = !_open;
        if (OnClick.HasDelegate)
        {
            OnClick.InvokeAsync(e);
        }
    }

    public void Navigated()
    {
        _open = false;
    }
}